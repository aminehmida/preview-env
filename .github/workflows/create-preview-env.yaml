name: Build and Deploy Preview Environment on Pull Requests

on:
  pull_request:
    types: [ opened, reopened, synchronize ]
    branches:
      - '*'
    paths-ignore:
      - "*.md"

permissions:
  contents: read
  pull-requests: write
  issues: write

env:
  REGISTRY: c8n.io
  IMAGE_NAME: aminehmida/preview-env

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for git info
    
    - name: Extract metadata
      id: meta
      uses: ./.github/actions/extract-preview-metadata
      with:
        pr-number: ${{ github.event.pull_request.number }}
        committer-username: ${{ github.event.pull_request.user.login }}
        registry-url: ${{ secrets.REGISTRY_URL }}
        image-name: ${{ env.IMAGE_NAME }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to private registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.REGISTRY_URL }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: |
          ${{ steps.meta.outputs.full-image }}
          ${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.preview-env-name }}-latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Setup Kubernetes environment
      uses: ./.github/actions/setup-k8s
      with:
        kubeconfig: ${{ secrets.KUBECONFIG }}
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Deploy to Kubernetes
      run: |
        # Run deployment using Task with your specific variables
        task k8s:apply \
          APP_NAME="preview-env" \
          IMAGE="${{ steps.meta.outputs.full-image }}" \
          PORT="3000" \
          BASE_DOMAIN="previewenv.aminehmida.com" \
          ENV="${{ steps.meta.outputs.preview-env-name }}" \
          REPLICAS="1"
    
    - name: Deployment status
      run: |
        echo "✅ Deployment completed successfully!"
        echo "🏷️  Image tag: ${{ steps.meta.outputs.image-tag }}"
        echo "🔎 Preview Environment: ${{ steps.meta.outputs.preview-env-name }}"
        echo "📦 Full image: ${{ steps.meta.outputs.full-image }}"

    - name: Comment on PR
      uses: actions/github-script@v7
      with:
        script: |
          const previewUrl = `https://${{ steps.meta.outputs.preview-env-name }}.previewenv.aminehmida.com`;
          const deployedAt = new Date().toISOString();
          
          let comment;
          
          if ('${{ github.event.action }}' === 'synchronize') {
            // Short comment for new commits
            comment = `## 🔄 Preview Environment Updated
            
            **📍 Preview URL:** ${previewUrl}
            **🏷️ Image Tag:** \`${{ steps.meta.outputs.image-tag }}\`
            **⚙️ Commit SHA:** \`${{ github.sha }}\``;
          } else {
            // Detailed comment for opened/reopened PR
            comment = `## 🚀 Preview Environment Deployed
            
            Your preview environment has been successfully deployed!
            
            **📍 Preview URL:** ${previewUrl}
            **🏷️ Image Tag:** \`${{ steps.meta.outputs.image-tag }}\`
            **🐳 Docker Image:** \`${{ steps.meta.outputs.full-image }}\`
            **🔎 Environment:** \`${{ steps.meta.outputs.preview-env-name }}\`
            **⚙️ Commit SHA:** \`${{ github.sha }}\`
            
            ---
            
            💡 **Tips:**
            - The preview environment will be available in a few moments
            - This environment will be updated automatically when you push new commits
            - Environment resources: 1 replica, 3000 port
            
            <details>
            <summary>🔧 Deployment Details</summary>
            
            - **Workflow Run:** [#${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - **Branch:** \`${{ github.head_ref }}\`
            - **Deployed at:** ${deployedAt}
            
            </details>`;
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });