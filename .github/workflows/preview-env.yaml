name: Build and Deploy Non-Main Branches

on:
  pull_request:
    types: [ opened, reopened, synchronize ]
    branches:
      - '*'
    paths-ignore:
      - "*.md"

env:
  REGISTRY: c8n.io
  IMAGE_NAME: aminehmida/preview-env

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for git info
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to private registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.REGISTRY_URL }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    - name: Extract metadata
      id: meta
      run: |
        # Get short commit SHA (7 characters)
        SHORT_SHA=$(git rev-parse --short=7 HEAD)
        
        # Get PR number and committer username for preview environment naming
        PR_NUMBER="${{ github.event.pull_request.number }}"
        COMMITTER_USERNAME="${{ github.event.pull_request.user.login }}"
        PREVIEW_ENV_NAME="pr-${PR_NUMBER}-${COMMITTER_USERNAME}"

        # Set outputs
        echo "short_sha=$SHORT_SHA" >> $GITHUB_OUTPUT
        echo "preview_env_name=$PREVIEW_ENV_NAME" >> $GITHUB_OUTPUT
        echo "image_tag=$SHORT_SHA" >> $GITHUB_OUTPUT
        echo "full_image=${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:$SHORT_SHA" >> $GITHUB_OUTPUT
        
        echo "Building image: ${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:$SHORT_SHA"
        echo "Preview Environment: $PREVIEW_ENV_NAME"
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: |
          ${{ steps.meta.outputs.full_image }}
          ${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.safe_branch_name }}-latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.33.3'
    
    - name: Install jsonnet
      run: |
        # Install go-jsonnet using .deb package
        VERSION="0.21.0"
        ARCH=$(dpkg --print-architecture)
        
        wget https://github.com/google/go-jsonnet/releases/download/v${VERSION}/jsonnet-go_${VERSION}_linux_${ARCH}.deb -P /tmp
        sudo dpkg -i /tmp/jsonnet-go_${VERSION}_linux_${ARCH}.deb
        
        # Verify installation
        jsonnet --version
    - name: Install Task
      uses: arduino/setup-task@v1
      with:
        version: 3.x
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Configure kubectl
      run: |
        # Create tmp directory for kubeconfig (matching your script's expectation)
        mkdir -p infrastructure/tmp
        
        # Configure kubectl to connect to your cluster
        echo "${{ secrets.KUBECONFIG }}" | base64 --decode > infrastructure/tmp/kubeconfig

    - name: Deploy to Kubernetes
      run: |
        # Debug output head of kubeconfig
        echo "Kubeconfig content:"
        head -n 10 infrastructure/tmp/kubeconfig
        # Run deployment using Task with your specific variables
        task k8s:apply \
          APP_NAME="preview-env" \
          IMAGE="${{ steps.meta.outputs.full_image }}" \
          PORT="3000" \
          BASE_DOMAIN="previewenv.aminehmida.com" \
          ENV="${{ steps.meta.outputs.preview_env_name }}" \
          REPLICAS="1"
    
    - name: Deployment status
      run: |
        echo "✅ Deployment completed successfully!"
        echo "🏷️  Image tag: ${{ steps.meta.outputs.image_tag }}"
        echo "🔎 Preview Environment: ${{ steps.meta.outputs.preview_env_name }}"
        echo "📦 Full image: ${{ steps.meta.outputs.full_image }}"

    - name: Comment on PR
      uses: actions/github-script@v7
      with:
        script: |
          const previewUrl = `https://${{ steps.meta.outputs.preview_env_name }}.previewenv.aminehmida.com`;
          const comment = `## 🚀 Preview Environment Deployed
          
          Your preview environment has been successfully deployed!
          
          **📍 Preview URL:** ${previewUrl}
          **🏷️ Image Tag:** \`${{ steps.meta.outputs.image_tag }}\`
          **🐳 Docker Image:** \`${{ steps.meta.outputs.full_image }}\`
          **🌿 Environment:** \`${{ steps.meta.outputs.preview_env_name }}\`
          **⚙️ Commit SHA:** \`${{ github.sha }}\`
          
          ---
          
          💡 **Tips:**
          - The preview environment will be available in a few moments
          - This environment will be updated automatically when you push new commits
          - Environment resources: 1 replica, 3000 port
          
          <details>
          <summary>🔧 Deployment Details</summary>
          
          - **Workflow Run:** [#${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          - **Branch:** \`${{ github.head_ref }}\`
          - **Deployed at:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')
          
          </details>`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });